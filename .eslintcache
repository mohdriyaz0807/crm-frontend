[{"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\index.js":"1","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\App.js":"2","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Dashboard.js":"3","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Login.js":"4","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\AllowAccess.js":"5","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Error.js":"6","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Register.js":"7","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Reset.js":"8","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Forgot.js":"9","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\Leads.js":"10","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\ContactsList.js":"11","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\LeadList.js":"12","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\ServiceList.js":"13","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\Contacts.js":"14","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\Service.js":"15","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\AddContactsForm.js":"16","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\AddServiceForm.js":"17","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\AddLeadsForm.js":"18","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Header.js":"19","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Logout.js":"20"},{"size":201,"mtime":1612930812543,"results":"21","hashOfConfig":"22"},{"size":1728,"mtime":1613549801663,"results":"23","hashOfConfig":"22"},{"size":3243,"mtime":1613549810563,"results":"24","hashOfConfig":"22"},{"size":5101,"mtime":1613549144036,"results":"25","hashOfConfig":"22"},{"size":3168,"mtime":1613548953754,"results":"26","hashOfConfig":"22"},{"size":1014,"mtime":1612284216093,"results":"27","hashOfConfig":"22"},{"size":4127,"mtime":1613549512255,"results":"28","hashOfConfig":"22"},{"size":4172,"mtime":1613549579070,"results":"29","hashOfConfig":"22"},{"size":3580,"mtime":1613549556422,"results":"30","hashOfConfig":"22"},{"size":1202,"mtime":1613455204341,"results":"31","hashOfConfig":"22"},{"size":2882,"mtime":1613547306389,"results":"32","hashOfConfig":"22"},{"size":2274,"mtime":1613455696871,"results":"33","hashOfConfig":"22"},{"size":2624,"mtime":1613455350341,"results":"34","hashOfConfig":"22"},{"size":1158,"mtime":1613450883023,"results":"35","hashOfConfig":"22"},{"size":1251,"mtime":1613455277886,"results":"36","hashOfConfig":"22"},{"size":2714,"mtime":1613454661129,"results":"37","hashOfConfig":"22"},{"size":4138,"mtime":1613455324945,"results":"38","hashOfConfig":"22"},{"size":4079,"mtime":1613547211794,"results":"39","hashOfConfig":"22"},{"size":998,"mtime":1613549832664,"results":"40","hashOfConfig":"22"},{"size":147,"mtime":1612376950145,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"jw3t2v",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\index.js",[],["86","87"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\App.js",["88","89"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Dashboard.js",["90","91"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Login.js",["92"],"import React,{useState,useEffect} from 'react';\r\nimport {Paper , Grid , FormControl,FormHelperText,Input,InputLabel,Button,makeStyles  } from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\"\r\nimport Swal from 'sweetalert2';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    padding: theme.spacing(4),\r\n    flexGrow: 1,\r\n    backgroundImage:'url(https://i.pinimg.com/originals/e2/34/b5/e234b5999940f25089b7bfd89ab74651.jpg)'\r\n    },\r\n    firstline:{\r\n    textAlign:'center',\r\n    fontSize:'150%',\r\n    fontFamily:'serif',\r\n    },\r\n    paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n},\r\ntitle:{\r\n    fontSize:'100%',\r\n    fontFamily:'serif',\r\n    fontStyle:'bold',\r\n    textAlign:'center',\r\n},\r\nnote:{\r\n  textAlign:'center',\r\n  backgroundColor:'lightblue',\r\n  paddingBlock:'2%',\r\n  border:'4px solid white',\r\n  borderTopStyle:'curl'\r\n}\r\n}));\r\n\r\nconst Login =() =>{\r\n  let url='https://crm-easy.herokuapp.com'\r\n\r\n  useEffect(() => {\r\n  fetch(`${url}/login`,{\r\n    method: \"GET\",\r\n    headers: {\r\n      \"auth\" : localStorage.getItem('token')\r\n    },\r\n  }).then((res) => res.json())\r\n  .then((data) =>{\r\n    console.log(data)\r\n    if(data.message===true){\r\n      window.location.href='/Dashboard'\r\n    }\r\n  }).catch((err) => {\r\n    console.log(err)\r\n })\r\n}, [])\r\n\r\n    const [data,setData]=useState({email:\"\",password:\"\"})\r\n    const [loading , setLoading ] = useState(false)\r\n    const SweetAlert =(status,data)=>{\r\n        Swal.fire({\r\n          icon: status,\r\n          title: 'Alert',\r\n          text: data,\r\n      })\r\n      }\r\n    const submit = async ()=>{\r\n        setLoading(true)\r\n        try {\r\n        var user = await fetch(`${url}/login`,{\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body : JSON.stringify(data)\r\n        }).then((res) => res.json())\r\n        console.log(user)\r\n        if(user.icon === \"success\"){\r\n        setLoading(false)\r\n        localStorage.setItem(\"token\",user.token)\r\n        localStorage.setItem(\"userdata\",JSON.stringify(user.result))\r\n        window.location.href='/Dashboard'\r\n        }\r\n        else{\r\n          setLoading(false)\r\n          SweetAlert(user.icon,user.message)\r\n          console.log(user.message)\r\n        }\r\n      }\r\n      catch(err) {\r\n          SweetAlert('warning',err)\r\n          console.log(err)\r\n        setLoading(false)\r\n      }\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2} alignItems='center'>\r\n            <Grid item sm={4} xs={12} md={7} className={classes.title}>\r\n            <h1>Easy CRM</h1><h2><i>Business Made Easy</i></h2>\r\n            <p>India's Best Customer Relationship Management Application</p>\r\n            </Grid>\r\n            <Grid item sm={8} xs={12} md={5}>\r\n            <Paper className={classes.paper}>\r\n            <h1 className={classes.firstline}>Login</h1>\r\n            <FormControl >\r\n            <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\r\n            <Input type='email' id=\"my-input\" aria-describedby=\"my-helper-text\" onChange={e=>setData({...data,email:e.target.value})} value={data.email} />\r\n            <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\r\n            </FormControl><br/>\r\n            <FormControl>\r\n            <InputLabel htmlFor=\"my-input1\">Password</InputLabel>\r\n            <Input type='password' id=\"my-input1\" aria-describedby=\"my-helper-text1\" onChange={e=>setData({...data,password:e.target.value})} value={data.password}/>\r\n            <FormHelperText id=\"my-helper-text1\">Password may be case sensitive</FormHelperText>\r\n            </FormControl><br/><br/>\r\n            <FormControl>\r\n            <Button variant=\"contained\" color=\"secondary\" disabled={loading} onClick={submit}>\r\n            {loading ? \"Logging in..\" : \"Login\" }\r\n            </Button>\r\n            </FormControl><br/><br/>\r\n            <FormControl>\r\n            <Link to='./Register'>New User?</Link>\r\n            </FormControl><br/><br/>\r\n            <FormControl>\r\n            <Link to='./Forgot'>Forgot Password?</Link>\r\n            </FormControl>\r\n            </Paper>\r\n            <div className={classes.note}>\r\n            <h4>For Login purpose, use below credentials</h4>\r\n            <p>Email : admin@crm.com</p>\r\n            <p>Password : 12451245</p>\r\n            </div>\r\n            </Grid>\r\n            </Grid>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst String=()=>{\r\n    let url='https://crm-easy.herokuapp.com'\r\n    const href = window.location.href.split('/')\r\n    const requiredstring = href[href.length-1]\r\n    const SweetAlert =(status,data)=>{\r\n      Swal.fire({\r\n        icon: status,\r\n        title: 'Alert',\r\n        text: data,\r\n    })\r\n    }\r\n    const show=async()=>{\r\n    const res=await axios.get(`${url}/confirm/${requiredstring}`)\r\n    console.log(res.data)\r\n    SweetAlert('success',res.message)\r\n    }\r\n    show()\r\n}\r\n\r\nexport  {Login ,String}\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\AllowAccess.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Error.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Register.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Reset.js",["93"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Forgot.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\Leads.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\ContactsList.js",["94"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\LeadList.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\ServiceList.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\Contacts.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\Service.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\AddContactsForm.js",["95"],"import React , {useState} from 'react'\r\nimport {Form , Col, Button } from 'react-bootstrap'\r\nimport {Alert } from '@material-ui/lab'\r\n\r\n\r\nfunction AddContactsForm(props) {\r\n    \r\n  const handleOnSubmit = async (event) => {\r\n\r\n    setLoading(true)\r\n\r\n    event.preventDefault()\r\n    try{\r\n    var contact = await fetch(\"https://crm-easy.herokuapp.com/contact\",{\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth\" : localStorage.getItem('token')\r\n      },\r\n      body : JSON.stringify(data)\r\n    }).then((res) => res.json())\r\n    if(contact.message === \"success\"){\r\n      console.log(contact.message)\r\n      setLoading(false)\r\n      setAlert({display : true , message : \"contact created successfully\"  , severity : \"success\" })\r\n      {props.Rerender(true)}\r\n    }\r\n    else{\r\n      console.log(contact.message)\r\n      setLoading(false)\r\n      setAlert({display : true , message : contact.message , severity : \"error\" })\r\n    }\r\n    setData({email : '' , name : \"\" , company : \"\" })\r\n  }catch(err){\r\n    setLoading(false)\r\n    setAlert({display : true , message : \"Something went wrong...\" , severity : \"error\" })\r\n  }\r\n\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    const prop = event.target.name;\r\n    const value = event.target.value;\r\n    var temp = JSON.parse(JSON.stringify(data))\r\n    temp[prop] = value;\r\n    setData(temp)\r\n  }\r\n\r\n  const [data, setData] = useState({email : '' , name : \"\" , company : \"\" })\r\n  const [loading , setLoading ] = useState(false)\r\n  const [alert , setAlert ] = useState({display : false , message : \"\" ,severity : \"error\" })\r\n\r\n    return (\r\n      <>\r\n      { alert.display ?  <Alert severity={alert.severity} onClose={() => { setAlert( {display : false} ) }} >{alert.message}</Alert> : <></> }\r\n    \r\n<Form onSubmit={handleOnSubmit} >\r\n  <Form.Row>\r\n      <Form.Group as={Col} md=\"3\" >\r\n      <Form.Label>Name </Form.Label>\r\n      <Form.Control placeholder=\"Name\" type=\"text\" onChange={handleOnChange} name=\"name\" value={data.name} />\r\n    </Form.Group>\r\n      <Form.Group as={Col} md=\"3\" >\r\n      <Form.Label>E-mail </Form.Label>\r\n      <Form.Control placeholder=\"email\" type=\"email\" onChange={handleOnChange} name=\"email\" value={data.email} />\r\n    </Form.Group>\r\n      <Form.Group as={Col} md=\"3\" >\r\n      <Form.Label>Company </Form.Label>\r\n      <Form.Control placeholder=\"company\" type=\"text\" onChange={handleOnChange} name=\"company\" value={data.company} />\r\n    </Form.Group>\r\n      <Form.Group as={Col} md=\"3\" className=\"pt-4\">\r\n      <Button type=\"submit\" disabled={loading}>{loading ? \"Please Wait\" : \"Submit\"}</Button>\r\n    </Form.Group>\r\n  </Form.Row>\r\n</Form>\r\n</>\r\n    )\r\n}\r\n\r\nexport default AddContactsForm\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\AddServiceForm.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\AddLeadsForm.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Header.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Logout.js",[],["96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":15,"nodeType":"104","messageId":"105","endLine":1,"endColumn":23},{"ruleId":"102","severity":1,"message":"106","line":1,"column":24,"nodeType":"104","messageId":"105","endLine":1,"endColumn":33},{"ruleId":"107","severity":1,"message":"108","line":48,"column":26,"nodeType":"109","messageId":"110","endLine":48,"endColumn":28},{"ruleId":"111","severity":1,"message":"112","line":55,"column":11,"nodeType":"113","endLine":55,"endColumn":13,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"112","line":56,"column":4,"nodeType":"113","endLine":56,"endColumn":6,"suggestions":"115"},{"ruleId":"107","severity":1,"message":"108","line":50,"column":31,"nodeType":"109","messageId":"110","endLine":50,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":38,"column":9,"nodeType":"118","messageId":"119","endLine":38,"endColumn":31},{"ruleId":"116","severity":1,"message":"117","line":26,"column":7,"nodeType":"118","messageId":"119","endLine":26,"endColumn":29},{"ruleId":"98","replacedBy":"120"},{"ruleId":"100","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["124"],["125"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["122"],["123"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"126","fix":"128"},"Update the dependencies array to be: [url]",{"range":"129","text":"130"},{"range":"131","text":"130"},[1407,1409],"[url]",[1380,1382]]