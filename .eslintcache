[{"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\index.js":"1","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\App.js":"2","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Dashboard.js":"3","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Login.js":"4","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\AllowAccess.js":"5","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Error.js":"6","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Register.js":"7","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Reset.js":"8","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Forgot.js":"9","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\Leads.js":"10","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\ContactsList.js":"11","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\LeadList.js":"12","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\ServiceList.js":"13"},{"size":201,"mtime":1612930812543,"results":"14","hashOfConfig":"15"},{"size":1668,"mtime":1613378141738,"results":"16","hashOfConfig":"15"},{"size":3278,"mtime":1613378652294,"results":"17","hashOfConfig":"15"},{"size":4494,"mtime":1613040485795,"results":"18","hashOfConfig":"15"},{"size":3626,"mtime":1613374940164,"results":"19","hashOfConfig":"15"},{"size":1014,"mtime":1612284216093,"results":"20","hashOfConfig":"15"},{"size":3833,"mtime":1612374957742,"results":"21","hashOfConfig":"15"},{"size":0,"mtime":1612272216092,"results":"22","hashOfConfig":"15"},{"size":437,"mtime":1612377138137,"results":"23","hashOfConfig":"15"},{"size":1074,"mtime":1613230230494,"results":"24","hashOfConfig":"15"},{"size":2061,"mtime":1613374734972,"results":"25","hashOfConfig":"15"},{"size":2888,"mtime":1613399204463,"results":"26","hashOfConfig":"15"},{"size":2610,"mtime":1613374911977,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"jw3t2v",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\index.js",[],["59","60"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\App.js",["61","62"],"import React,{useState} from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, BrowserRouter as Router,Redirect } from \"react-router-dom\";\nimport {Login ,String} from \"./components/User/Login\";\nimport Register from \"./components/User/Register\";\nimport Forgot from \"./components/User/Forgot\";\nimport Reset from \"./components/User/Reset\";\nimport ContactsList from \"./components/Contacts/ContactsList\"\nimport LeadList from \"./components/Lead/LeadList\";\nimport ServiceList from \"./components/ServiceRequest/ServiceList\";\nimport Dashboard from \"./components/Dashboard\";\nimport AllowAccess from './components/AllowAccess'\nimport Error from './components/Error'\n\n\n\nfunction App() {\n  return (\n    <>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n        <Login/> \n          </Route>\n        <Route path=\"/Login\">\n        <Login/> \n        </Route>\n        <Route exact path=\"/Dashboard\">\n          <Dashboard/>\n        </Route>\n        <Route exact path=\"/Register\">\n         <Register/>\n        </Route>\n        <Route path=\"/String\">\n          <String/>\n        </Route>\n        <Route exact path=\"/Forgot\">\n         <Forgot/>\n        </Route>\n        <Route exact path=\"/Reset\">\n         <Reset/>\n        </Route>\n        <Route path=\"/Contacts\">\n            <ContactsList/>\n        </Route>\n        <Route path=\"/ServiceRequest\">\n            <ServiceList/>\n        </Route>\n        <Route path=\"/Leads\">\n            <LeadList/>\n        </Route>\n        <Route path=\"/AllowAccess\">\n            <AllowAccess/>\n        </Route>\n        <Route path=\"*\">\n            <Error/>\n        </Route>\n      </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Dashboard.js",["63","64","65"],"import React ,{useEffect, useState} from \"react\";\nimport {Paper,makeStyles,Grid,Typography,Button} from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  btn:{\n    display: 'flex',\n    justifyContent:'center',\n    marginTop:'5%'\n  },\n  firstline:{\n    padding:theme.spacing(2),\n    backgroundImage: 'url(https://i.pinimg.com/originals/05/bb/0e/05bb0e21f08fe5753f8b88204f0a99db.jpg)',\n    backgroundSize: 'cover',\n    height:'40vh'\n    },\n  paper: {\n    padding: theme.spacing(4),\n    boxShadow:'3px 5px gray',\n    backgroundColor:\"#ff9980\" ,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    textDecorationLine:'none',\n    color:'black',\n  },\n}));\n\nconst Dashboard = () => {\n  let url='https://crm-easy.herokuapp.com'\n  const SweetAlert =(status,data)=>{\n    Swal.fire({\n      icon: status,\n      title: 'Alert',\n      text: data,\n  })\n  }\n    useEffect(()=>{\n        fetch(`${url}/dashboard`, {\n            method : \"GET\",\n            headers : {\n              \"auth\" : localStorage.getItem('token')\n            }\n        }).then(res => res.json()).then((data) =>{ \n            if(data.icon == \"warning\"){\n              SweetAlert(data.icon,data.message)\n              window.location.href='/Login'\n            } else{\n            console.log(data)\n            setstate(data)\n          }\n    })} , [] )\n    const [state, setstate] = useState({service : \"\" , leads : \"\" , contacts : \"\" })\n\n    const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={12}>\n          <Paper className={classes.firstline} >\n          </Paper>\n        </Grid>\n        </Grid>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={4} md={4} >\n          <Paper className={classes.paper}>\n            <Typography>\n            Service Request - {state.service.length}\n            </Typography>\n      <Link to='./ServiceRequest' style={{textDecoration :'none'}}><Button variant='contained' color=\"secondary\">\n        View \n      </Button>\n      </Link>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={4} md={4} >\n          <Paper className={classes.paper}>\n            <Typography>\n            Leads - {state.leads.length}\n            </Typography>\n        <Link to='./Leads' style={{textDecoration :'none'}}><Button variant='contained' color=\"secondary\">\n          View  </Button>\n        </Link>\n          </Paper>\n          </Grid>\n        <Grid item xs={12} sm={4} md={4} >\n          <Paper className={classes.paper}>\n            <Typography>\n            Contacts - {state.contacts.length}\n            </Typography>\n        <Link to='./Contacts' style={{textDecoration :'none'}}><Button variant='contained' color=\"secondary\">\n          View \n        </Button>\n        </Link>\n          </Paper>\n          </Grid>\n      </Grid>\n      {(localStorage.getItem('userdata').access!==\"Employee\")?\n          <div className={classes.btn}><Link to='./AllowAccess' style={{textDecoration :'none'}}><Button variant='contained' color=\"secondary\">Allow Access</Button></Link></div>\n          :\"\"}\n    </div>\n  )\n    }\n\n\n\nexport default Dashboard;\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Login.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\AllowAccess.js",["66","67"],"import React, { useEffect, useState } from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {Alert , AlertTitle} from '@material-ui/lab'\r\nimport {Table , Button ,Dropdown } from 'react-bootstrap'\r\n\r\nfunction AllowAccess() {\r\n\r\n    useEffect(() =>{\r\n        fetch(\"https://crm-easy.herokuapp.com/access\",{\r\n      method: \"GET\",\r\n      headers: {\r\n        \"auth\" : localStorage.getItem('token')\r\n      }\r\n    }).then((res) => res.json()).then(data => {\r\n        if(data.message === \"success\"){\r\n            setLoading(false)\r\n            setAccessUsers(data.users)\r\n        }\r\n        else {\r\n            setLoading(false)\r\n        }\r\n    }).catch(err => {console.log(err)})\r\n    } , [] )\r\n\r\n    const reRender = () => {\r\n        fetch(\"https://crm-easy.herokuapp.com/access\",{\r\n      method: \"GET\",\r\n      headers: {\r\n        \"auth\" : localStorage.getItem('token')\r\n      }\r\n    }).then((res) => res.json()).then(data => {\r\n      console.log(data)\r\n        if(data.message === \"success\"){\r\n            setLoading(false)\r\n            setAccessUsers(data.users)\r\n\r\n        }\r\n        else {\r\n            setLoading(false)\r\n        }\r\n    }).catch(err => {console.log(err)})\r\n    \r\n    }\r\n\r\n    const handleChange = (id , permission ) => {\r\n        console.log(id , permission)\r\n        fetch(\"https://crm-easy.herokuapp.com/access\",{\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth\" : localStorage.getItem('token')\r\n      },\r\n      body : JSON.stringify( {  _id : id , permission : permission } )\r\n    }).then((res) => res.json()).then(data => {\r\n        if(data.message === \"success\") {\r\n            setAlert({display : true , message : \"Changes have been made successfully\" , severity:\"success\" })\r\n            reRender()\r\n        }\r\n        else{\r\n            setAlert({display : true , message : data.message , severity:\"error\" })\r\n        }\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n\r\n    }\r\n\r\n    const [accessUsers, setAccessUsers] = useState([])\r\n    const [loading , setLoading ] = useState(true)\r\n    const [alert , setAlert ] = useState({display : false , message : \"\" , severity:\"error\" })\r\n\r\n    if(loading) \r\n    return(<>\r\n        <Skeleton variant=\"rect\" height={\"50px\"}  />\r\n        <Skeleton variant=\"rect\" height={\"50px\"}  />\r\n        <Skeleton variant=\"rect\" height={\"50px\"}  /> </>)\r\n\r\nelse\r\n\r\n    return (\r\n       <>\r\n       { alert.display ?  <Alert severity={alert.severity} onClose={() => { setAlert( {display : false} ) }} >{alert.message}</Alert> : <></> }\r\n       \r\n    <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Email</th>\r\n      <th>Level</th>\r\n      <th>Access</th>\r\n      <th>Allow Access</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {accessUsers.map(user => (\r\n              <tr key = {user._id} >\r\n              <th>{user.name}</th>\r\n              <th>{user.email}</th>\r\n              <th>{user.access}</th>\r\n              <th>{user.permission}</th>\r\n              <th><Dropdown>\r\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n    Modify\r\n  </Dropdown.Toggle>\r\n\r\n  <Dropdown.Menu>\r\n    <Dropdown.Item as=\"button\" onClick={() => { handleChange(user._id , 'none') }} >None</Dropdown.Item>\r\n    <Dropdown.Item as=\"button\" onClick={() => { handleChange(user._id , 'view') }} >View Only</Dropdown.Item>\r\n    <Dropdown.Item as=\"button\" onClick={() => { handleChange(user._id , 'edit') }} >View and Edit</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown></th>\r\n            </tr>\r\n      ))}\r\n  </tbody>\r\n  </Table>\r\n  </>\r\n    )\r\n}\r\n\r\nexport default AllowAccess\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Error.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Register.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Reset.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Forgot.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\Leads.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\ContactsList.js",["68"],"import React , {useEffect , useState} from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {Alert , AlertTitle} from '@material-ui/lab'\r\nimport {Table , Button } from 'react-bootstrap'\r\n\r\nfunction ContatsList() {\r\n    useEffect(() => {\r\n         fetch(\"https://crm-easy.herokuapp.com/contact\", {\r\n             method : \"GET\",\r\n             headers : {\r\n                \"auth\" : localStorage.getItem('token')\r\n             }\r\n         } ).then(res => res.json()).then((data) =>{\r\n             // Upadte \r\n             setLoading(false)\r\n             if(data.message === \"success\"){\r\n                console.log(data)\r\n                setContacts(data.contacts)\r\n             }\r\n             else{\r\n                setAlert({display : true , message : data.message })\r\n             }\r\n         }).catch((err) => {\r\n            setAlert({display : true , message : \"Something went wrong try again later\" })\r\n         })\r\n    }, [])\r\n    const [contacts , setContacts ] =useState([])\r\n    const [loading , setLoading ] = useState(true)\r\n    const [alert , setAlert ] = useState({display : false , message : \"\" })\r\n\r\n    if(loading) \r\n        return(<>\r\n            <Skeleton variant=\"rect\" height={\"50px\"}  />\r\n            <Skeleton variant=\"rect\" height={\"50px\"}  />\r\n            <Skeleton variant=\"rect\" height={\"50px\"}  /> </>)\r\n    \r\n    else\r\n    return (\r\n        <> \r\n        {alert.display ? <Alert severity=\"error\">\r\n  <AlertTitle>Error</AlertTitle>\r\n  {alert.message}<strong> - check it out!</strong>\r\n</Alert> : <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Name</th>\r\n      <th>Email</th>\r\n      <th>Company</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n{contacts.map( (contact , index ) => ( \r\n                <tr key={contact._id}>\r\n                <td>{index+1}</td>\r\n              <td>{contact.name}</td>\r\n                <td>{contact.email}</td>\r\n                <td>{contact.company}</td>\r\n              </tr>\r\n    )) }\r\n  </tbody>\r\n</Table> } \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContatsList\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\LeadList.js",["69"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\ServiceList.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":15,"nodeType":"76","messageId":"77","endLine":1,"endColumn":23},{"ruleId":"74","severity":1,"message":"78","line":3,"column":49,"nodeType":"76","messageId":"77","endLine":3,"endColumn":57},{"ruleId":"79","severity":1,"message":"80","line":29,"column":5,"nodeType":"81","messageId":"82","endLine":29,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":49,"column":26,"nodeType":"85","messageId":"82","endLine":49,"endColumn":28},{"ruleId":"86","severity":1,"message":"87","line":56,"column":11,"nodeType":"88","endLine":56,"endColumn":13,"suggestions":"89"},{"ruleId":"74","severity":1,"message":"90","line":3,"column":17,"nodeType":"76","messageId":"77","endLine":3,"endColumn":27},{"ruleId":"74","severity":1,"message":"91","line":4,"column":17,"nodeType":"76","messageId":"77","endLine":4,"endColumn":23},{"ruleId":"74","severity":1,"message":"91","line":4,"column":17,"nodeType":"76","messageId":"77","endLine":4,"endColumn":23},{"ruleId":"74","severity":1,"message":"92","line":29,"column":10,"nodeType":"76","messageId":"77","endLine":29,"endColumn":18},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'AlertTitle' is defined but never used.","'Button' is defined but never used.","'reRender' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [url]",{"range":"98","text":"99"},[1442,1444],"[url]"]