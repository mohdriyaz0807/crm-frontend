[{"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\index.js":"1","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\App.js":"2","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Dashboard.js":"3","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Login.js":"4","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\AllowAccess.js":"5","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Error.js":"6","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Register.js":"7","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Reset.js":"8","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Forgot.js":"9","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\Leads.js":"10","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\ContactsList.js":"11","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\LeadList.js":"12","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\ServiceList.js":"13","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\Contacts.js":"14","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\Service.js":"15","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\AddContactsForm.js":"16","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\AddServiceForm.js":"17","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\AddLeadsForm.js":"18","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Header.js":"19","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Logout.js":"20"},{"size":201,"mtime":1612930812543,"results":"21","hashOfConfig":"22"},{"size":1690,"mtime":1613464501708,"results":"23","hashOfConfig":"22"},{"size":3284,"mtime":1613465614972,"results":"24","hashOfConfig":"22"},{"size":4886,"mtime":1613465608596,"results":"25","hashOfConfig":"22"},{"size":3626,"mtime":1613374940164,"results":"26","hashOfConfig":"22"},{"size":1014,"mtime":1612284216093,"results":"27","hashOfConfig":"22"},{"size":3833,"mtime":1612374957742,"results":"28","hashOfConfig":"22"},{"size":0,"mtime":1612272216092,"results":"29","hashOfConfig":"22"},{"size":437,"mtime":1612377138137,"results":"30","hashOfConfig":"22"},{"size":1202,"mtime":1613455204341,"results":"31","hashOfConfig":"22"},{"size":2890,"mtime":1613455650590,"results":"32","hashOfConfig":"22"},{"size":2274,"mtime":1613455696871,"results":"33","hashOfConfig":"22"},{"size":2624,"mtime":1613455350341,"results":"34","hashOfConfig":"22"},{"size":1158,"mtime":1613450883023,"results":"35","hashOfConfig":"22"},{"size":1251,"mtime":1613455277886,"results":"36","hashOfConfig":"22"},{"size":2714,"mtime":1613454661129,"results":"37","hashOfConfig":"22"},{"size":4138,"mtime":1613455324945,"results":"38","hashOfConfig":"22"},{"size":4181,"mtime":1613455222962,"results":"39","hashOfConfig":"22"},{"size":1117,"mtime":1613465289311,"results":"40","hashOfConfig":"22"},{"size":147,"mtime":1612376950145,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"jw3t2v",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\index.js",[],["87","88"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\App.js",["89","90"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Dashboard.js",["91","92","93"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Login.js",["94"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\AllowAccess.js",["95","96"],"import React, { useEffect, useState } from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {Alert , AlertTitle} from '@material-ui/lab'\r\nimport {Table , Button ,Dropdown } from 'react-bootstrap'\r\n\r\nfunction AllowAccess() {\r\n\r\n    useEffect(() =>{\r\n        fetch(\"https://crm-easy.herokuapp.com/access\",{\r\n      method: \"GET\",\r\n      headers: {\r\n        \"auth\" : localStorage.getItem('token')\r\n      }\r\n    }).then((res) => res.json()).then(data => {\r\n        if(data.message === \"success\"){\r\n            setLoading(false)\r\n            setAccessUsers(data.users)\r\n        }\r\n        else {\r\n            setLoading(false)\r\n        }\r\n    }).catch(err => {console.log(err)})\r\n    } , [] )\r\n\r\n    const reRender = () => {\r\n        fetch(\"https://crm-easy.herokuapp.com/access\",{\r\n      method: \"GET\",\r\n      headers: {\r\n        \"auth\" : localStorage.getItem('token')\r\n      }\r\n    }).then((res) => res.json()).then(data => {\r\n      console.log(data)\r\n        if(data.message === \"success\"){\r\n            setLoading(false)\r\n            setAccessUsers(data.users)\r\n\r\n        }\r\n        else {\r\n            setLoading(false)\r\n        }\r\n    }).catch(err => {console.log(err)})\r\n    \r\n    }\r\n\r\n    const handleChange = (id , permission ) => {\r\n        console.log(id , permission)\r\n        fetch(\"https://crm-easy.herokuapp.com/access\",{\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth\" : localStorage.getItem('token')\r\n      },\r\n      body : JSON.stringify( {  _id : id , permission : permission } )\r\n    }).then((res) => res.json()).then(data => {\r\n        if(data.message === \"success\") {\r\n            setAlert({display : true , message : \"Changes have been made successfully\" , severity:\"success\" })\r\n            reRender()\r\n        }\r\n        else{\r\n            setAlert({display : true , message : data.message , severity:\"error\" })\r\n        }\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n\r\n    }\r\n\r\n    const [accessUsers, setAccessUsers] = useState([])\r\n    const [loading , setLoading ] = useState(true)\r\n    const [alert , setAlert ] = useState({display : false , message : \"\" , severity:\"error\" })\r\n\r\n    if(loading) \r\n    return(<>\r\n        <Skeleton variant=\"rect\" height={\"50px\"}  />\r\n        <Skeleton variant=\"rect\" height={\"50px\"}  />\r\n        <Skeleton variant=\"rect\" height={\"50px\"}  /> </>)\r\n\r\nelse\r\n\r\n    return (\r\n       <>\r\n       { alert.display ?  <Alert severity={alert.severity} onClose={() => { setAlert( {display : false} ) }} >{alert.message}</Alert> : <></> }\r\n       \r\n    <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Email</th>\r\n      <th>Level</th>\r\n      <th>Access</th>\r\n      <th>Allow Access</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {accessUsers.map(user => (\r\n              <tr key = {user._id} >\r\n              <th>{user.name}</th>\r\n              <th>{user.email}</th>\r\n              <th>{user.access}</th>\r\n              <th>{user.permission}</th>\r\n              <th><Dropdown>\r\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n    Modify\r\n  </Dropdown.Toggle>\r\n\r\n  <Dropdown.Menu>\r\n    <Dropdown.Item as=\"button\" onClick={() => { handleChange(user._id , 'none') }} >None</Dropdown.Item>\r\n    <Dropdown.Item as=\"button\" onClick={() => { handleChange(user._id , 'view') }} >View Only</Dropdown.Item>\r\n    <Dropdown.Item as=\"button\" onClick={() => { handleChange(user._id , 'edit') }} >View and Edit</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown></th>\r\n            </tr>\r\n      ))}\r\n  </tbody>\r\n  </Table>\r\n  </>\r\n    )\r\n}\r\n\r\nexport default AllowAccess\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Error.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Register.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Reset.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Forgot.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\Leads.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\ContactsList.js",["97","98"],"import React , {useEffect , useState} from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {Alert , AlertTitle} from '@material-ui/lab'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {Table , Button } from 'react-bootstrap'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction ContatsList(props) {\r\n    useEffect(() => {\r\n         fetch(\"https://crm-easy.herokuapp.com/contact\", {\r\n             method : \"GET\",\r\n             headers : {\r\n                \"auth\" : localStorage.getItem('token')\r\n             }\r\n         } ).then(res => res.json()).then((data) =>{\r\n             // Upadte \r\n             setLoading(false)\r\n             if(data.message === \"success\"){\r\n                console.log(data)\r\n                setContacts(data.contacts)\r\n             }\r\n             else{\r\n                setAlert({display : true , message : data.message })\r\n             }\r\n         }).catch((err) => {\r\n            setAlert({display : true , message : err-\"Something went wrong try again later\" })\r\n         })\r\n    }, [props.render])\r\n\r\n    const handleDelete=(id)=>{\r\n      setAction(<CircularProgress color=\"inherit\" />)\r\n      fetch(`https://crm-easy.herokuapp.com/contact/${id}`, {\r\n        method : \"PUT\",\r\n        headers : {\r\n           \"auth\" : localStorage.getItem('token')\r\n        }\r\n    }).then(res => res.json()).then((data) =>{\r\n        {props.Rerender(true)}\r\n        })\r\n    .catch((err) => {\r\n      setAlert({display : true , message : err-\"Something went wrong try again later\" })\r\n    })\r\n    setAction(<DeleteIcon fontSize=\"small\" />)\r\n  }\r\n    const [contacts , setContacts ] =useState([])\r\n    const [loading , setLoading ] = useState(true)\r\n    const [alert , setAlert ] = useState({display : false , message : \"\" })\r\n    const [action,setAction] =useState(<DeleteIcon fontSize=\"small\" />)\r\n    if(loading)\r\n        return(<>\r\n            <Skeleton variant=\"rect\" height={\"50px\"}  />\r\n            <Skeleton variant=\"rect\" height={\"50px\"}  />\r\n            <Skeleton variant=\"rect\" height={\"50px\"}  /> </>)\r\n    else\r\n    return (\r\n        <> \r\n        {alert.display ? <Alert severity=\"error\">\r\n  <AlertTitle>Error</AlertTitle>\r\n  {alert.message}<strong> - check it out!</strong>\r\n</Alert> : <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Name</th>\r\n      <th>Email</th>\r\n      <th>Company</th>\r\n      <th>Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n{contacts.map( (contact , index ) => (\r\n                <tr key={contact._id}>\r\n                <td>{index+1}</td>\r\n              <td>{contact.name}</td>\r\n                <td>{contact.email}</td>\r\n                <td>{contact.company}</td>\r\n                <td onClick={()=>handleDelete(contact._id)}>{action}</td>\r\n              </tr>\r\n    )) }\r\n  </tbody>\r\n</Table> } \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContatsList\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\LeadList.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\ServiceList.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\Contacts.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\Service.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Contacts\\AddContactsForm.js",["99"],"import React , {useState} from 'react'\r\nimport {Form , Col, Button } from 'react-bootstrap'\r\nimport {Alert } from '@material-ui/lab'\r\n\r\n\r\nfunction AddContactsForm(props) {\r\n    \r\n  const handleOnSubmit = async (event) => {\r\n\r\n    setLoading(true)\r\n\r\n    event.preventDefault()\r\n    try{\r\n    var contact = await fetch(\"https://crm-easy.herokuapp.com/contact\",{\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth\" : localStorage.getItem('token')\r\n      },\r\n      body : JSON.stringify(data)\r\n    }).then((res) => res.json())\r\n    if(contact.message === \"success\"){\r\n      console.log(contact.message)\r\n      setLoading(false)\r\n      setAlert({display : true , message : \"contact created successfully\"  , severity : \"success\" })\r\n      {props.Rerender(true)}\r\n    }\r\n    else{\r\n      console.log(contact.message)\r\n      setLoading(false)\r\n      setAlert({display : true , message : contact.message , severity : \"error\" })\r\n    }\r\n    setData({email : '' , name : \"\" , company : \"\" })\r\n  }catch(err){\r\n    setLoading(false)\r\n    setAlert({display : true , message : \"Something went wrong...\" , severity : \"error\" })\r\n  }\r\n\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    const prop = event.target.name;\r\n    const value = event.target.value;\r\n    var temp = JSON.parse(JSON.stringify(data))\r\n    temp[prop] = value;\r\n    setData(temp)\r\n  }\r\n\r\n  const [data, setData] = useState({email : '' , name : \"\" , company : \"\" })\r\n  const [loading , setLoading ] = useState(false)\r\n  const [alert , setAlert ] = useState({display : false , message : \"\" ,severity : \"error\" })\r\n\r\n    return (\r\n      <>\r\n      { alert.display ?  <Alert severity={alert.severity} onClose={() => { setAlert( {display : false} ) }} >{alert.message}</Alert> : <></> }\r\n    \r\n<Form onSubmit={handleOnSubmit} >\r\n  <Form.Row>\r\n      <Form.Group as={Col} md=\"3\" >\r\n      <Form.Label>Name </Form.Label>\r\n      <Form.Control placeholder=\"Name\" type=\"text\" onChange={handleOnChange} name=\"name\" value={data.name} />\r\n    </Form.Group>\r\n      <Form.Group as={Col} md=\"3\" >\r\n      <Form.Label>E-mail </Form.Label>\r\n      <Form.Control placeholder=\"email\" type=\"email\" onChange={handleOnChange} name=\"email\" value={data.email} />\r\n    </Form.Group>\r\n      <Form.Group as={Col} md=\"3\" >\r\n      <Form.Label>Company </Form.Label>\r\n      <Form.Control placeholder=\"company\" type=\"text\" onChange={handleOnChange} name=\"company\" value={data.company} />\r\n    </Form.Group>\r\n      <Form.Group as={Col} md=\"3\" className=\"pt-4\">\r\n      <Button type=\"submit\" disabled={loading}>{loading ? \"Please Wait\" : \"Submit\"}</Button>\r\n    </Form.Group>\r\n  </Form.Row>\r\n</Form>\r\n</>\r\n    )\r\n}\r\n\r\nexport default AddContactsForm\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\ServiceRequest\\AddServiceForm.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Lead\\AddLeadsForm.js",["100","101","102","103","104"],"import React ,{useState} from \"react\";\r\nimport { Form, Col, Button } from \"react-bootstrap\";\r\nimport {Alert} from '@material-ui/lab';\r\nimport {Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle } from '@material-ui/core';\r\n\r\nfunction AddLeadsForm({setData , data, Rerender}) {\r\n\r\n  const handleAdd = async () => {\r\n    var lead = await fetch(\"https://crm-easy.herokuapp.com/leads\",{\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth\" : localStorage.getItem('token')\r\n      },\r\n      body : JSON.stringify(data)\r\n    }).then((res) => res.json())\r\n    if(lead.message === \"success\"){\r\n      console.log(lead.message)\r\n      setLoading(false)\r\n      setData({...data , email : '' , description : \"\"} )\r\n      setAlert({display : true , message : \"Lead created successfully\"  , severity : \"success\" })\r\n    }\r\n    else{\r\n      console.log(lead.message)\r\n      setLoading(false)\r\n      setAlert({display : true , message : lead.message , severity : \"error\" })\r\n    }\r\n    Rerender(true)\r\n  }\r\n\r\n  const handleEdit = async() =>{\r\n    try{\r\n    var lead = await fetch(\"https://crm-easy.herokuapp.com/leads\",{\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth\" : localStorage.getItem('token')\r\n      },\r\n      body : JSON.stringify(data)\r\n    }).then((res) => res.json())\r\n    if(lead.message === \"success\"){\r\n      console.log(lead.message)\r\n      setLoading(false)\r\n      setData({status : \"new\"  , email : '' , description : \"\"} )\r\n      setAlert({display : true , message : \"Lead Edited successfully\"  , severity : \"success\" })\r\n    }\r\n    else{\r\n      console.log(lead.message)\r\n      setLoading(false)\r\n      setAlert({display : true , message : lead.message , severity : \"error\" })\r\n    }\r\n    }catch(err) {\r\n      setLoading(false)\r\n      setAlert({display : true , message : \"Something went wrong...\" , severity : \"error\" })\r\n    }\r\n    Rerender(true)\r\n  }\r\n\r\n  const handleOnSubmit = async (event) => {\r\n    event.preventDefault()\r\n    setLoading(true)\r\n\r\n    if(data._id)\r\n    handleEdit();\r\n    else\r\n    handleAdd();\r\n\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    const prop = event.target.name;\r\n    const value = event.target.value;\r\n    var temp = JSON.parse(JSON.stringify(data))\r\n    temp[prop] = value;\r\n    setData(temp)\r\n  }\r\n  \r\n  const [loading , setLoading ] = useState(false)\r\n  const [alert , setAlert ] = useState({display : false , message : \"\"  , severity : \"error\" })\r\n\r\n  return (\r\n    <>\r\n     { alert.display ?  <Alert severity={alert.severity} onClose={() => { setAlert( {display : false} ) }} >{alert.message}</Alert> : <></> }\r\n    <Form onSubmit={handleOnSubmit} >\r\n        <Form.Row>\r\n      <Form.Group as={Col} md=\"3\" >\r\n      <Form.Label>Lead Contacts </Form.Label>\r\n          <Form.Control placeholder=\"Email\" type=\"email\" onChange={handleOnChange} value={data.email} name=\"email\" />\r\n    </Form.Group>\r\n    <Form.Group as={Col} md=\"3\" >\r\n    <Form.Label>Lead description </Form.Label>\r\n          <Form.Control placeholder=\"Lead description\" type=\"text\" onChange={handleOnChange} value={data.description} name=\"description\" />\r\n          \r\n    </Form.Group>\r\n        <Form.Group as={Col} >\r\n          <Form.Label  htmlFor=\"inlineFormCustomSelect\">Status</Form.Label>\r\n          <Form.Control as=\"select\" id=\"inlineFormCustomSelect\" onChange={handleOnChange} value={data.status} name=\"status\" >\r\n            {data._id ? <> \r\n            <option value=\"new\">new</option>\r\n            <option value=\"contacted\">Contacted</option>\r\n            <option value=\"Qualified\">Qualified</option>\r\n            <option value=\"Lost\">Lost</option>\r\n            <option value=\"Cancelled\">Cancelled</option>\r\n            <option value=\"Confirmed\">Confirmed</option>\r\n            </> : <option value=\"new\">new</option> }\r\n            \r\n          </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} md=\"3\" className=\"pt-4\" >\r\n  <Button type=\"submit\" disabled={loading}>{loading ? \"Please Wait\" : \"Submit\"}</Button>\r\n        </Form.Group>\r\n        </Form.Row>\r\n    </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddLeadsForm;\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\Header.js",["105"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\CRM\\client\\src\\components\\User\\Logout.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":15,"nodeType":"112","messageId":"113","endLine":1,"endColumn":23},{"ruleId":"110","severity":1,"message":"114","line":3,"column":49,"nodeType":"112","messageId":"113","endLine":3,"endColumn":57},{"ruleId":"115","severity":1,"message":"116","line":29,"column":5,"nodeType":"117","messageId":"118","endLine":29,"endColumn":10},{"ruleId":"119","severity":1,"message":"120","line":49,"column":26,"nodeType":"121","messageId":"118","endLine":49,"endColumn":28},{"ruleId":"122","severity":1,"message":"123","line":56,"column":11,"nodeType":"124","endLine":56,"endColumn":13,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"123","line":56,"column":4,"nodeType":"124","endLine":56,"endColumn":6,"suggestions":"126"},{"ruleId":"110","severity":1,"message":"127","line":3,"column":17,"nodeType":"112","messageId":"113","endLine":3,"endColumn":27},{"ruleId":"110","severity":1,"message":"128","line":4,"column":17,"nodeType":"112","messageId":"113","endLine":4,"endColumn":23},{"ruleId":"110","severity":1,"message":"128","line":5,"column":17,"nodeType":"112","messageId":"113","endLine":5,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":38,"column":9,"nodeType":"131","messageId":"132","endLine":38,"endColumn":31},{"ruleId":"129","severity":1,"message":"130","line":26,"column":7,"nodeType":"131","messageId":"132","endLine":26,"endColumn":29},{"ruleId":"110","severity":1,"message":"133","line":4,"column":9,"nodeType":"112","messageId":"113","endLine":4,"endColumn":15},{"ruleId":"110","severity":1,"message":"134","line":4,"column":16,"nodeType":"112","messageId":"113","endLine":4,"endColumn":29},{"ruleId":"110","severity":1,"message":"135","line":4,"column":30,"nodeType":"112","messageId":"113","endLine":4,"endColumn":43},{"ruleId":"110","severity":1,"message":"136","line":4,"column":44,"nodeType":"112","messageId":"113","endLine":4,"endColumn":61},{"ruleId":"110","severity":1,"message":"137","line":4,"column":62,"nodeType":"112","messageId":"113","endLine":4,"endColumn":73},{"ruleId":"110","severity":1,"message":"138","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":14},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["141"],["142"],"'AlertTitle' is defined but never used.","'Button' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Logout' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},"Update the dependencies array to be: [url]",{"range":"146","text":"147"},{"range":"148","text":"147"},[1448,1450],"[url]",[1364,1366]]